{"ast":null,"code":"var _jsxFileName = \"D:\\\\nodejs\\\\login-page\\\\frontend\\\\src\\\\components\\\\context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, createContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContextTheme = /*#__PURE__*/createContext();\n\nfunction Context({\n  children\n}) {\n  _s();\n\n  const [theme, setTheme] = useState(\"dark\");\n\n  const toggleTheme = () => {\n    setTheme(theme === \"dark\" ? \"light\" : \"dark\");\n  };\n\n  const objectTheme = {\n    theme,\n    toggleTheme\n  };\n  return /*#__PURE__*/_jsxDEV(ContextTheme.Provider, {\n    value: objectTheme,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Context, \"MOCvl6iGOxSkmATsuDSc6CWgskg=\");\n\n_c = Context;\nexport { ContextTheme, Context };\n\nvar _c;\n\n$RefreshReg$(_c, \"Context\");","map":{"version":3,"sources":["D:/nodejs/login-page/frontend/src/components/context.js"],"names":["React","useState","createContext","ContextTheme","Context","children","theme","setTheme","toggleTheme","objectTheme"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,aAA1B,QAA+C,OAA/C;;AACA,MAAMC,YAAY,gBAAGD,aAAa,EAAlC;;AACA,SAASE,OAAT,CAAiB;AAAEC,EAAAA;AAAF,CAAjB,EAA+B;AAAA;;AAC7B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,MAAD,CAAlC;;AACA,QAAMO,WAAW,GAAG,MAAM;AACxBD,IAAAA,QAAQ,CAACD,KAAK,KAAK,MAAV,GAAmB,OAAnB,GAA6B,MAA9B,CAAR;AACD,GAFD;;AAIA,QAAMG,WAAW,GAAG;AAClBH,IAAAA,KADkB;AAElBE,IAAAA;AAFkB,GAApB;AAKA,sBACE,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAEC,WAA9B;AAAA,cACGJ;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAhBQD,O;;KAAAA,O;AAiBT,SAASD,YAAT,EAAuBC,OAAvB","sourcesContent":["import React, { useState, createContext } from \"react\";\r\nconst ContextTheme = createContext();\r\nfunction Context({ children }) {\r\n  const [theme, setTheme] = useState(\"dark\");\r\n  const toggleTheme = () => {\r\n    setTheme(theme === \"dark\" ? \"light\" : \"dark\");\r\n  };\r\n  \r\n  const objectTheme = {\r\n    theme,\r\n    toggleTheme,\r\n  };\r\n\r\n  return (\r\n    <ContextTheme.Provider value={objectTheme}>\r\n      {children}\r\n    </ContextTheme.Provider>\r\n  );\r\n}\r\nexport { ContextTheme, Context };\r\n"]},"metadata":{},"sourceType":"module"}