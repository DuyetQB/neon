{"ast":null,"code":"var _jsxFileName = \"D:\\\\nodejs\\\\login-page\\\\frontend\\\\src\\\\components\\\\context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, createContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Context({\n  children\n}) {\n  _s();\n\n  const [theme, setTheme] = useState(\"dark\");\n\n  const toggleTheme = () => {\n    setTheme(theme === \"dark\" ? \"light\" : \"dark\");\n  };\n\n  const context = /*#__PURE__*/createContext();\n  const objectTheme = {\n    theme,\n    toggleTheme\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(context.Provider, {\n      value: objectTheme,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Context, \"MOCvl6iGOxSkmATsuDSc6CWgskg=\");\n\n_c = Context;\n\nvar _c;\n\n$RefreshReg$(_c, \"Context\");","map":{"version":3,"sources":["D:/nodejs/login-page/frontend/src/components/context.js"],"names":["React","useState","useContext","createContext","Context","children","theme","setTheme","toggleTheme","context","objectTheme"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,aAAtC,QAA2D,OAA3D;;AAEA,OAAO,SAASC,OAAT,CAAiB;AAAEC,EAAAA;AAAF,CAAjB,EAA+B;AAAA;;AACpC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,MAAD,CAAlC;;AACA,QAAMO,WAAW,GAAG,MAAM;AACxBD,IAAAA,QAAQ,CAACD,KAAK,KAAK,MAAV,GAAmB,OAAnB,GAA6B,MAA9B,CAAR;AACD,GAFD;;AAGA,QAAMG,OAAO,gBAAGN,aAAa,EAA7B;AACA,QAAMO,WAAW,GAAG;AAClBJ,IAAAA,KADkB;AAElBE,IAAAA;AAFkB,GAApB;AAIA,sBACE;AAAA,2BACE,QAAC,OAAD,CAAS,QAAT;AAAkB,MAAA,KAAK,EAAEE,WAAzB;AAAA,gBAAuCL;AAAvC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAfeD,O;;KAAAA,O","sourcesContent":["import React, { useState, useContext, createContext } from \"react\";\r\n\r\nexport function Context({ children }) {\r\n  const [theme, setTheme] = useState(\"dark\");\r\n  const toggleTheme = () => {\r\n    setTheme(theme === \"dark\" ? \"light\" : \"dark\");\r\n  };\r\n  const context = createContext();\r\n  const objectTheme = {\r\n    theme,\r\n    toggleTheme,\r\n  };\r\n  return (\r\n    <div>\r\n      <context.Provider value={objectTheme}>{children}</context.Provider>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}