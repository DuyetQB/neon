{"ast":null,"code":"import styled, { css } from \"styled-components\";\nexport const WrapButton = styled.div`\n  display: flex;\n  cursor: pointer;\n  border-radius: ${({\n  theme\n}) => theme.borderRadius.base};\n  ${({\n  isBorder\n}) => isBorder && css`\n      border: 1px solid ${({\n  theme\n}) => theme.colors.grey1};\n    `}\n\n  ${({\n  textCenter\n}) => textCenter && css`\n      justify-content: center;\n      align-items: center;\n      text-align: center;\n    `}\n`;\nexport const Button = styled.button`\n  padding: 0.5em 0em;\n  border: none;\n  border-radius: ${({\n  theme\n}) => theme.borderRadius.base};\n  outline: none;\n  color: ${({\n  theme\n}) => theme.colors.black};\n  background: ${({\n  theme\n}) => theme.colors.white1};\n\n  ${({\n  isHover\n}) => isHover && css`\n      &:hover {\n        box-shadow: ${({\n  theme\n}) => theme.boxShadow.buttonBox};\n        transition: all 0.2s ease-in-out;\n      }\n    `}\n\n  ${({\n  isBlue\n}) => isBlue && css`\n      color: ${({\n  theme\n}) => theme.colors.white1};\n      background: ${({\n  theme\n}) => theme.colors.blue1};\n    `}\n\n    ${({\n  isGreen\n}) => isGreen && css`\n      color: ${({\n  theme\n}) => theme.colors.white1};\n      background: ${({\n  theme\n}) => theme.colors.greenSky1};\n    `}\n\n  ${({\n  textCenter\n}) => textCenter && css`\n      width: 100%;\n    `}\n\n    ${({\n  padding\n}) => padding && css`\n      padding: ${padding};\n    `}\n  ${({\n  margin\n}) => margin && css`\n      margin: ${margin};\n    `}\n    ${({\n  minWidth\n}) => minWidth && css`\n      min-width: ${minWidth};\n    `}\n    ${({\n  maxWidth\n}) => maxWidth && css`\n      max-width: ${maxWidth};\n    `}\n`;\nexport const ImgIcon = styled.img`\n  padding: 10px;\n`;","map":{"version":3,"sources":["D:/nodejs/login-page/frontend/src/components/Button/styled.js"],"names":["styled","css","WrapButton","div","theme","borderRadius","base","isBorder","colors","grey1","textCenter","Button","button","black","white1","isHover","boxShadow","buttonBox","isBlue","blue1","isGreen","greenSky1","padding","margin","minWidth","maxWidth","ImgIcon","img"],"mappings":"AAAA,OAAOA,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;AAEA,OAAO,MAAMC,UAAU,GAAGF,MAAM,CAACG,GAAI;AACrC;AACA;AACA,mBAAmB,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,YAAN,CAAmBC,IAAK;AAC1D,IAAI,CAAC;AAAEC,EAAAA;AAAF,CAAD,KACAA,QAAQ,IACRN,GAAI;AACR,0BAA0B,CAAC;AAAEG,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACI,MAAN,CAAaC,KAAM;AAC5D,KAAM;AACN;AACA,IAAI,CAAC;AAAEC,EAAAA;AAAF,CAAD,KACAA,UAAU,IACVT,GAAI;AACR;AACA;AACA;AACA,KAAM;AACN,CAjBO;AAkBP,OAAO,MAAMU,MAAM,GAAGX,MAAM,CAACY,MAAO;AACpC;AACA;AACA,mBAAmB,CAAC;AAAER,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,YAAN,CAAmBC,IAAK;AAC1D;AACA,WAAW,CAAC;AAAEF,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACI,MAAN,CAAaK,KAAM;AAC7C,gBAAgB,CAAC;AAAET,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACI,MAAN,CAAaM,MAAO;AACnD;AACA,IAAI,CAAC;AAAEC,EAAAA;AAAF,CAAD,KACAA,OAAO,IACPd,GAAI;AACR;AACA,sBAAsB,CAAC;AAAEG,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACY,SAAN,CAAgBC,SAAU;AAC/D;AACA;AACA,KAAM;AACN;AACA,IAAI,CAAC;AAAEC,EAAAA;AAAF,CAAD,KACAA,MAAM,IACNjB,GAAI;AACR,eAAe,CAAC;AAAEG,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACI,MAAN,CAAaM,MAAO;AAClD,oBAAoB,CAAC;AAAEV,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACI,MAAN,CAAaW,KAAM;AACtD,KAAM;AACN;AACA,MAAM,CAAC;AAAEC,EAAAA;AAAF,CAAD,KACFA,OAAO,IACPnB,GAAI;AACR,eAAe,CAAC;AAAEG,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACI,MAAN,CAAaM,MAAO;AAClD,oBAAoB,CAAC;AAAEV,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACI,MAAN,CAAaa,SAAU;AAC1D,KAAM;AACN;AACA,IAAI,CAAC;AAAEX,EAAAA;AAAF,CAAD,KACAA,UAAU,IACVT,GAAI;AACR;AACA,KAAM;AACN;AACA,MAAM,CAAC;AAAEqB,EAAAA;AAAF,CAAD,KACFA,OAAO,IACPrB,GAAI;AACR,iBAAiBqB,OAAQ;AACzB,KAAM;AACN,IAAI,CAAC;AAAEC,EAAAA;AAAF,CAAD,KACAA,MAAM,IACNtB,GAAI;AACR,gBAAgBsB,MAAO;AACvB,KAAM;AACN,MAAM,CAAC;AAAEC,EAAAA;AAAF,CAAD,KACFA,QAAQ,IACRvB,GAAI;AACR,mBAAmBuB,QAAS;AAC5B,KAAM;AACN,MAAM,CAAC;AAAEC,EAAAA;AAAF,CAAD,KACFA,QAAQ,IACRxB,GAAI;AACR,mBAAmBwB,QAAS;AAC5B,KAAM;AACN,CAzDO;AA2DP,OAAO,MAAMC,OAAO,GAAG1B,MAAM,CAAC2B,GAAI;AAClC;AACA,CAFO","sourcesContent":["import styled, { css } from \"styled-components\";\r\n\r\nexport const WrapButton = styled.div`\r\n  display: flex;\r\n  cursor: pointer;\r\n  border-radius: ${({ theme }) => theme.borderRadius.base};\r\n  ${({ isBorder }) =>\r\n    isBorder &&\r\n    css`\r\n      border: 1px solid ${({ theme }) => theme.colors.grey1};\r\n    `}\r\n\r\n  ${({ textCenter }) =>\r\n    textCenter &&\r\n    css`\r\n      justify-content: center;\r\n      align-items: center;\r\n      text-align: center;\r\n    `}\r\n`;\r\nexport const Button = styled.button`\r\n  padding: 0.5em 0em;\r\n  border: none;\r\n  border-radius: ${({ theme }) => theme.borderRadius.base};\r\n  outline: none;\r\n  color: ${({ theme }) => theme.colors.black};\r\n  background: ${({ theme }) => theme.colors.white1};\r\n\r\n  ${({ isHover }) =>\r\n    isHover &&\r\n    css`\r\n      &:hover {\r\n        box-shadow: ${({ theme }) => theme.boxShadow.buttonBox};\r\n        transition: all 0.2s ease-in-out;\r\n      }\r\n    `}\r\n\r\n  ${({ isBlue }) =>\r\n    isBlue &&\r\n    css`\r\n      color: ${({ theme }) => theme.colors.white1};\r\n      background: ${({ theme }) => theme.colors.blue1};\r\n    `}\r\n\r\n    ${({ isGreen }) =>\r\n    isGreen &&\r\n    css`\r\n      color: ${({ theme }) => theme.colors.white1};\r\n      background: ${({ theme }) => theme.colors.greenSky1};\r\n    `}\r\n\r\n  ${({ textCenter }) =>\r\n    textCenter &&\r\n    css`\r\n      width: 100%;\r\n    `}\r\n\r\n    ${({ padding }) =>\r\n    padding &&\r\n    css`\r\n      padding: ${padding};\r\n    `}\r\n  ${({ margin }) =>\r\n    margin &&\r\n    css`\r\n      margin: ${margin};\r\n    `}\r\n    ${({ minWidth }) =>\r\n    minWidth &&\r\n    css`\r\n      min-width: ${minWidth};\r\n    `}\r\n    ${({ maxWidth }) =>\r\n    maxWidth &&\r\n    css`\r\n      max-width: ${maxWidth};\r\n    `}\r\n`;\r\n\r\nexport const ImgIcon = styled.img`\r\n  padding: 10px;\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}